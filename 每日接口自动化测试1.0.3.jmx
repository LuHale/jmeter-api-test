<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1448936371000</longProp>
        <longProp name="ThreadGroup.end_time">1448936371000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">Thread.sleep(10000); </stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename">D:\Program Files\apache-jmeter-2.11\result\result.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="result" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="mail_page" elementType="Argument">
              <stringProp name="Argument.name">mail_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="list_page" elementType="Argument">
              <stringProp name="Argument.name">list_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="result_html" elementType="Argument">
              <stringProp name="Argument.name">result_html</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="details_page" elementType="Argument">
              <stringProp name="Argument.name">details_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="goods_comment_page" elementType="Argument">
              <stringProp name="Argument.name">goods_comment_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="goods_recommend_page" elementType="Argument">
              <stringProp name="Argument.name">goods_recommend_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="goods_car_page" elementType="Argument">
              <stringProp name="Argument.name">goods_car_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="goods_cate_page" elementType="Argument">
              <stringProp name="Argument.name">goods_cate_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="order_list_page" elementType="Argument">
              <stringProp name="Argument.name">order_list_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="order_detailes_page" elementType="Argument">
              <stringProp name="Argument.name">order_detailes_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="collection_list_page" elementType="Argument">
              <stringProp name="Argument.name">collection_list_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="son_active_page" elementType="Argument">
              <stringProp name="Argument.name">son_active_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="buying_list_page" elementType="Argument">
              <stringProp name="Argument.name">buying_list_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="active_goods_detailes_page" elementType="Argument">
              <stringProp name="Argument.name">active_goods_detailes_page</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activity_list" elementType="Argument">
              <stringProp name="Argument.name">activity_list</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="my_activity" elementType="Argument">
              <stringProp name="Argument.name">my_activity</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="enroll_activity_list" elementType="Argument">
              <stringProp name="Argument.name">enroll_activity_list</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="collection_activity_list" elementType="Argument">
              <stringProp name="Argument.name">collection_activity_list</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="del_activity_list" elementType="Argument">
              <stringProp name="Argument.name">del_activity_list</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="share_num" elementType="Argument">
              <stringProp name="Argument.name">share_num</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="used_date" elementType="Argument">
              <stringProp name="Argument.name">used_date</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="result_code" elementType="Argument">
              <stringProp name="Argument.name">result_code</stringProp>
              <stringProp name="Argument.value">-999</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="result_codes" elementType="Argument">
              <stringProp name="Argument.name">result_codes</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activity_used_date" elementType="Argument">
              <stringProp name="Argument.name">activity_used_date</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activity_result_codes" elementType="Argument">
              <stringProp name="Argument.name">activity_result_codes</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="result_html" elementType="Argument">
              <stringProp name="Argument.name">result_html</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="tag" elementType="Argument">
              <stringProp name="Argument.name">tag</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商城接口" enabled="false"/>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="TestPlan.comments">商城接口http请求默认值变量</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">utf-8</stringProp>
              <stringProp name="filename">D:\Program Files\apache-jmeter-2.11\version.txt</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">version</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">mall.sinosns.cn/${version}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            </ConfigTestElement>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100、商城首页" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="101、商品列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">101</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="商品id" enabled="true">
                <stringProp name="TestPlan.comments">获取列表页面所有商品id</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">goods_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.....)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="102、商品详情" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">102</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${goods_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="商品名称" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">goods_name</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="104、商品评论" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">104</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${goods_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="109、商品推荐" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">109</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="110、购物车列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">110</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="user_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1106</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">user_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;


String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="114、商品分类" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">114</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="cate_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cate_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="200、订单列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="user_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">247</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">user_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="201、订单详情" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="user_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">45014</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">user_id</stringProp>
                  </elementProp>
                  <elementProp name="order_num" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">14417782004501411</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">order_num</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="506、收藏列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">506</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="user_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">18709</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">user_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="601、子活动列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">506</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="user_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">247</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">user_id</stringProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">65</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="602、秒杀列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">602</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="user_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">247</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">user_id</stringProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">110</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="603、活动商品详情" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="por" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">603</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">por</stringProp>
                  </elementProp>
                  <elementProp name="proIden" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8a7dd37255b778b4062deac6dbd5ada9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">proIden</stringProp>
                  </elementProp>
                  <elementProp name="user_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">247</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">user_id</stringProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">247</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                  <elementProp name="hd_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">112</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hd_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());

//System.out.println(start_date);
vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}
System.out.println(res);
vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
              <stringProp name="BeanShellSampler.query">import java.util.HashMap;
String []use_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);
String []result_codes=&quot;${result_codes}&quot;.split(&quot;,&quot;);
String temp=&quot;0&quot;;
String tag=&quot;${tag}&quot;;
String temp_result=&quot;&quot;;

HashMap m=new HashMap();
m.put(&quot;0&quot;,&quot;成功&quot;);
m.put(&quot;1&quot;,&quot;失败&quot;);
m.put(&quot;2&quot;,&quot;版本更新&quot;);
m.put(&quot;3&quot;,&quot;缺少参数&quot;);
m.put(&quot;4&quot;,&quot;非法请求&quot;);
m.put(&quot;5&quot;,&quot;商品已下架&quot;);
m.put(&quot;6&quot;,&quot;库存不足&quot;);
m.put(&quot;7&quot;,&quot;支付失败&quot;);
m.put(&quot;8&quot;,&quot;支付失败&quot;);
m.put(&quot;9&quot;,&quot;该商品已经收藏&quot;);
m.put(&quot;10&quot;,&quot;自取商品无法确认收货&quot;);
m.put(&quot;11&quot;,&quot;收货地址个数已到上限&quot;);
m.put(&quot;12&quot;,&quot;无法购买&quot;);
m.put(&quot;13&quot;,&quot;库存不足&quot;);
m.put(&quot;14&quot;,&quot;订单已取消&quot;);
m.put(&quot;15&quot;,&quot;已经发货，不能取消订单&quot;);
m.put(&quot;16&quot;,&quot;已经领取，不能取消订单&quot;);
m.put(&quot;17&quot;,&quot;没有详情&quot;);
m.put(&quot;18&quot;,&quot;已评论&quot;);
m.put(&quot;19&quot;,&quot;订单已付款&quot;);
m.put(&quot;20&quot;,&quot;预售商品，耐心等等吧&quot;);
m.put(&quot;21&quot;,&quot;已确认收货&quot;);
m.put(&quot;22&quot;,&quot;已确认领取&quot;);
m.put(&quot;23&quot;,&quot;订单已取消&quot;);
m.put(&quot;24&quot;,&quot;现金暂不支持订单取消&quot;);
m.put(&quot;25&quot;,&quot;该订单不可删除&quot;);
m.put(&quot;26&quot;,&quot;购买数量超过限购数量&quot;);
m.put(&quot;27&quot;,&quot;积分不足&quot;);
m.put(&quot;28&quot;,&quot;发票信息写入失败&quot;);
m.put(&quot;29&quot;,&quot;无数据&quot;);
m.put(&quot;30&quot;,&quot;支付超时，订单已被关闭&quot;);
m.put(&quot;96&quot;,&quot;超出秒杀活动时间范围&quot;);
m.put(&quot;97&quot;,&quot;该商品id没有对应商品数据&quot;);
m.put(&quot;98&quot;,&quot;缺少参数或参数有误&quot;);
m.put(&quot;99&quot;,&quot;访问错误&quot;);
m.put(&quot;100&quot;,&quot;已抢光&quot;);
m.put(&quot;101&quot;,&quot;排队异常&quot;);
m.put(&quot;102&quot;,&quot;出队异常&quot;);
m.put(&quot;103&quot;,&quot;商品售罄&quot;);
m.put(&quot;104&quot;,&quot;购物车已满&quot;);
m.put(&quot;-999&quot;,&quot;接口调用失败&quot;);

String  errcodestr=&quot;,-999,1,3,4,7,8,12,28,29,97,98,99,101,102,&quot;;

String []title={&quot;商城首页&quot;,&quot;商品列表&quot;,&quot;商品详情&quot;,&quot;商品评论&quot;,&quot;商品推荐&quot;,&quot;购物车列表&quot;,&quot;商品分类&quot;,&quot;订单列表&quot;,&quot;订单详情&quot;,&quot;收藏列表&quot;,&quot;子活动列表&quot;,&quot;秒杀列表&quot;,&quot;活动商品详情&quot;};

//result+=&quot;&lt;center&gt;&lt;h3&gt;测试结果&lt;/h3&gt;&lt;/center&gt;&quot;;
temp_result+=&quot;&lt;h5&gt;商城接口${version}&lt;/h5&gt;&quot;;
temp_result+=&quot;&lt;center&gt;&lt;body&gt;&quot;;
temp_result+=&quot;&lt;table width=&apos;95%&apos; cellspacing=&apos;2&apos; cellpadding=&apos;5&apos; border=&apos;0&apos; class=&apos;details&apos; align=&apos;center&apos;&gt;&quot;;
temp_result+=&quot;&lt;tr&gt;&lt;th&gt;接口名称&lt;/th&gt;&lt;th&gt;状态&lt;/th&gt;&lt;th&gt;响应时间(毫秒)&lt;/th&gt;&lt;/tr&gt;&quot;;
for (int i=0;i&lt;title.length;i++){
	if (errcodestr.indexOf(&quot;,&quot;+result_codes[i+1]+&quot;,&quot;)&gt;=0)
	{
		if (((&quot;${version}&quot;!=&quot;app&quot;)&amp;&amp;((title[i]!=&quot;购物车列表&quot;) || (title[i]!=&quot;商品分类&quot;))) &amp;&amp; (&quot;${version}&quot;!=&quot;app_v1.2.0&quot;)&amp;&amp;((title[i]!=&quot;购物车列表&quot;) || (title[i]!=&quot;商品分类&quot;))){
		
			temp_result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos; &gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
			tag=&quot;1&quot;;
			temp=&quot;1&quot;;
		}
	}
	/*else
	{
		result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
	}*/
}

temp_result+=&quot;&lt;/table&gt;&quot;;
temp_result+=&quot;&lt;/body&gt;&lt;/center&gt;&quot;;
if (temp==&quot;0&quot;){
	temp_result=&quot;&quot;;
	}
if (tag==&quot;1&quot;)
{
	temp_result += &quot;${result_html}&quot;;
}
vars.put(&quot;result_tag&quot;,tag);
System.out.println(tag);
vars.put(&quot;tag&quot;,tag);
vars.put(&quot;result_html&quot;,temp_result);
vars.put(&quot;used_date&quot;,&quot;&quot;);
vars.put(&quot;result_codes&quot;,&quot;&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters">used_date result_codes creat_email_time result_tag  result_html tag</stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="活动模块" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="result" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="mail_page" elementType="Argument">
                <stringProp name="Argument.name">mail_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="list_page" elementType="Argument">
                <stringProp name="Argument.name">list_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="result_html" elementType="Argument">
                <stringProp name="Argument.name">result_html</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="details_page" elementType="Argument">
                <stringProp name="Argument.name">details_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="goods_comment_page" elementType="Argument">
                <stringProp name="Argument.name">goods_comment_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="goods_recommend_page" elementType="Argument">
                <stringProp name="Argument.name">goods_recommend_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="goods_car_page" elementType="Argument">
                <stringProp name="Argument.name">goods_car_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="goods_cate_page" elementType="Argument">
                <stringProp name="Argument.name">goods_cate_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="order_list_page" elementType="Argument">
                <stringProp name="Argument.name">order_list_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="order_detailes_page" elementType="Argument">
                <stringProp name="Argument.name">order_detailes_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collection_list_page" elementType="Argument">
                <stringProp name="Argument.name">collection_list_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="son_active_page" elementType="Argument">
                <stringProp name="Argument.name">son_active_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="buying_list_page" elementType="Argument">
                <stringProp name="Argument.name">buying_list_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="active_goods_detailes_page" elementType="Argument">
                <stringProp name="Argument.name">active_goods_detailes_page</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_list" elementType="Argument">
                <stringProp name="Argument.name">activity_list</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="my_activity" elementType="Argument">
                <stringProp name="Argument.name">my_activity</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enroll_activity_list" elementType="Argument">
                <stringProp name="Argument.name">enroll_activity_list</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collection_activity_list" elementType="Argument">
                <stringProp name="Argument.name">collection_activity_list</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="del_activity_list" elementType="Argument">
                <stringProp name="Argument.name">del_activity_list</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="share_num" elementType="Argument">
                <stringProp name="Argument.name">share_num</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="used_date_1" elementType="Argument">
                <stringProp name="Argument.name">used_date_1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="result_code" elementType="Argument">
                <stringProp name="Argument.name">result_code</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="result_codes" elementType="Argument">
                <stringProp name="Argument.name">result_codes</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">activity.sinosns.cn/index.php/port</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          </ConfigTestElement>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="活动列表" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="product_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_CQTV_LJQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">product_id</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">indexList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;
String start_date=&quot;${activity_used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());
System.out.println(start_date);
vars.put(&quot;activity_used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date mail_page result_code  activity_result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${activity_used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}
System.out.println(res);
vars.put(&quot;activity_used_date&quot;,res);
vars.put(&quot;activity_result_codes&quot;,&quot;${activity_result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的活动" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="product_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_CQTV_LJQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">product_id</stringProp>
                </elementProp>
                <elementProp name="userid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">18709</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userid</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">applyCount</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${activity_used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());
System.out.println(start_date);

vars.put(&quot;activity_used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date mail_page result_code  activity_result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${activity_used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}
System.out.println(res);
vars.put(&quot;activity_used_date&quot;,res);
vars.put(&quot;activity_result_codes&quot;,&quot;${activity_result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报名活动列表" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="product_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_CQTV_LJQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">product_id</stringProp>
                </elementProp>
                <elementProp name="userid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">18709</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userid</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">applyList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${activity_used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;activity_used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date mail_page result_code  activity_result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${activity_used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}
System.out.println(res);
vars.put(&quot;activity_used_date&quot;,res);
vars.put(&quot;activity_result_codes&quot;,&quot;${activity_result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="收藏活动列表" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="product_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_CQTV_LJQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">product_id</stringProp>
                </elementProp>
                <elementProp name="userid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">18709</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userid</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">praiseList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${activity_used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;activity_used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date mail_page result_code  activity_result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${activity_used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}
System.out.println(res);
vars.put(&quot;activity_used_date&quot;,res);
vars.put(&quot;activity_result_codes&quot;,&quot;${activity_result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除收藏活动" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="praise_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">praise_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">praiseDel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${activity_used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;activity_used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date mail_page result_code  activity_result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${activity_used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}
System.out.println(res);
vars.put(&quot;activity_used_date&quot;,res);
vars.put(&quot;activity_result_codes&quot;,&quot;${activity_result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加分享数量" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="product_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_CQTV_LJQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">product_id</stringProp>
                </elementProp>
                <elementProp name="userid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">18709</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userid</stringProp>
                </elementProp>
                <elementProp name="activity_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">activity_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">addNum</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${activity_used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;activity_used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">activity_used_date mail_page result_code  activity_result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${activity_used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}
System.out.println(res);
vars.put(&quot;activity_used_date&quot;,res);
vars.put(&quot;activity_result_codes&quot;,&quot;${activity_result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">import java.util.HashMap;
String []use_dates=&quot;${activity_used_date}&quot;.split(&quot;,&quot;);
String []result_codes=&quot;${activity_result_codes}&quot;.split(&quot;,&quot;);
String []title={&quot;活动列表&quot;,&quot;我的活动&quot;,&quot;报名活动列表&quot;,&quot;收藏活动列表&quot;,&quot;删除收藏活动&quot;,&quot;添加分享数量&quot;};
String  errcodestr=&quot;,-999,1,&quot;;
String result_tag=&quot;0&quot;;
HashMap m=new HashMap();
m.put(&quot;0&quot;,&quot;成功&quot;);
m.put(&quot;1&quot;,&quot;缺少参数&quot;);
m.put(&quot;-999&quot;,&quot;接口调用失败&quot;);
String activity_result=&quot;&quot;;
activity_result+=&quot;&lt;h5&gt;活动模块&lt;/h5&gt;&quot;;
activity_result+=&quot;&lt;center&gt;&lt;body&gt;&quot;;
activity_result+=&quot;&lt;table width=&apos;95%&apos; cellspacing=&apos;2&apos; cellpadding=&apos;5&apos; border=&apos;0&apos; class=&apos;details&apos; align=&apos;center&apos;&gt;&quot;;
activity_result+=&quot;&lt;tr&gt;&lt;th&gt;接口名称&lt;/th&gt;&lt;th&gt;状态&lt;/th&gt;&lt;th&gt;响应时间(毫秒)&lt;/th&gt;&lt;/tr&gt;&quot;;

for (int i=0;i&lt;title.length;i++){
	if (errcodestr.indexOf(&quot;,&quot;+result_codes[i+1]+&quot;,&quot;)&gt;=0){
		result_tag=&quot;1&quot;;
		activity_result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos; &gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
		

	}
	/*else
	{
		activity_result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
	}*/
}

System.out.println(result_tag);
activity_result+=&quot;&lt;/table&gt;&quot;;
activity_result+=&quot;&lt;/body&gt;&lt;/center&gt;&quot;;
if (result_tag==&quot;0&quot;){
	activity_result=&quot; &quot;;
	}
vars.put(&quot;activity_result_tag&quot;,result_tag);
vars.put(&quot;activity_result_html&quot;,activity_result);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters">activity_used_date activity_result_codes activity_result_tag</stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">import java.util.HashMap;

/*public static void main(String[] args)  
{  
    int age = 23;  
      
    Name name = new Name();  
    name.setFirstName(&quot;zhang&quot;);  
    name.setLastName(&quot;san&quot;);  
      
    List&lt;String&gt; aihao = new ArrayList&lt;String&gt;();  
    aihao.add(&quot;pashan&quot;);  
    aihao.add(&quot;movies&quot;);  
      
    Person person = new Person();  
    person.setName(name);  
    person.setAge(age);  
    person.setAihao(aihao);  
      
    JSONObject jo = JSONObject.fromObject(person);  
    System.out.println(jo.toString());  
}  
*/
String a=&quot;,0,1,2,3,4,5,6,7,9,10,11,12,&quot;;

HashMap m=new HashMap();
m.put(&quot;0&quot;,&quot;成功&quot;);
m.put(&quot;1&quot;,&quot;失败&quot;);
m.put(&quot;2&quot;,&quot;版本更新&quot;);
m.put(&quot;3&quot;,&quot;缺少参数&quot;);
m.put(&quot;4&quot;,&quot;非法请求&quot;);
m.put(&quot;5&quot;,&quot;商品已下架&quot;);
m.put(&quot;6&quot;,&quot;库存不足&quot;);
m.put(&quot;7&quot;,&quot;支付失败&quot;);
m.put(&quot;8&quot;,&quot;支付失败&quot;);
m.put(&quot;9&quot;,&quot;该商品已经收藏&quot;);
m.put(&quot;10&quot;,&quot;自取商品无法确认收货&quot;);
m.put(&quot;11&quot;,&quot;收货地址个数已到上限&quot;);
m.put(&quot;12&quot;,&quot;无法购买&quot;);
m.put(&quot;13&quot;,&quot;库存不足&quot;);
m.put(&quot;14&quot;,&quot;订单已取消&quot;);
m.put(&quot;15&quot;,&quot;已经发货，不能取消订单&quot;);
m.put(&quot;16&quot;,&quot;已经领取，不能取消订单&quot;);
m.put(&quot;17&quot;,&quot;没有详情&quot;);
m.put(&quot;18&quot;,&quot;已评论&quot;);
m.put(&quot;19&quot;,&quot;订单已付款&quot;);
m.put(&quot;20&quot;,&quot;预售商品，耐心等等吧&quot;);
m.put(&quot;21&quot;,&quot;已确认收货&quot;);
m.put(&quot;22&quot;,&quot;已确认领取&quot;);
m.put(&quot;23&quot;,&quot;订单已取消&quot;);
m.put(&quot;24&quot;,&quot;现金暂不支持订单取消&quot;);
m.put(&quot;25&quot;,&quot;该订单不可删除&quot;);
m.put(&quot;26&quot;,&quot;购买数量超过限购数量&quot;);
m.put(&quot;27&quot;,&quot;积分不足&quot;);
m.put(&quot;28&quot;,&quot;发票信息写入失败&quot;);
m.put(&quot;29&quot;,&quot;无数据&quot;);
m.put(&quot;30&quot;,&quot;支付超时，订单已被关闭&quot;);
m.put(&quot;96&quot;,&quot;超出秒杀活动时间范围&quot;);
m.put(&quot;97&quot;,&quot;该商品id没有对应商品数据&quot;);
m.put(&quot;98&quot;,&quot;缺少参数或参数有误&quot;);
m.put(&quot;99&quot;,&quot;访问错误&quot;);
m.put(&quot;100&quot;,&quot;已抢光&quot;);
m.put(&quot;101&quot;,&quot;排队异常&quot;);
m.put(&quot;102&quot;,&quot;出队异常&quot;);
m.put(&quot;103&quot;,&quot;商品售罄&quot;);
m.put(&quot;104&quot;,&quot;购物车已满&quot;);
m.put(&quot;-999&quot;,&quot;接口调用失败&quot;);


String result=&quot;&quot;;
result+=&quot;&lt;center&gt;&lt;h1&gt;测试结果&lt;/h1&gt;&lt;/center&gt;&quot;;
result+=&quot;&lt;center&gt;&lt;body&gt;&quot;;
result+=&quot;&lt;table width=&apos;95%&apos; cellspacing=&apos;2&apos; cellpadding=&apos;5&apos; border=&apos;0&apos; class=&apos;details&apos; align=&apos;center&apos;&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;th&gt;接口名称&lt;/th&gt;&lt;th&gt;状态&lt;/th&gt;&lt;/tr&gt;&quot;;

result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;商城首页&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${mail_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;商品列表&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${list_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;商品详情&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${details_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;商品评论&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${goods_comment_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;商品推荐&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${goods_recommend_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;购物车列表&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${goods_car_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;商品分类&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${order_detailes_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;订单列表&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${order_list_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;订单详情&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${order_detailes_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;收藏列表&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${collection_list_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;子活动列表&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${son_active_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;秒杀列表&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${buying_list_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;活动商品详情&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(&quot;${active_goods_detailes_page}&quot;)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;





result+=&quot;&lt;/table&gt;&quot;;
result+=&quot;&lt;/body&gt;&lt;/center&gt;&quot;;




vars.put(&quot;mail_page&quot;,m.get(&quot;${mail_page}&quot;));
vars.put(&quot;list_page&quot;,m.get(&quot;${list_page}&quot;));
vars.put(&quot;result_html&quot;,result);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters">mail_page list_page result_html details_page goods_comment_page goods_recommend_page goods_car_page goods_cate_page order_detailes_page order_list_page collection_list_page son_active_page buying_list_page active_goods_detailes_page</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户中心" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="user" elementType="Argument">
                <stringProp name="Argument.name">user</stringProp>
                <stringProp name="Argument.value">18665708701</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="result_code" elementType="Argument">
                <stringProp name="Argument.name">result_code</stringProp>
                <stringProp name="Argument.value">-999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="used_date" elementType="Argument">
                <stringProp name="Argument.name">used_date</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="result_codes" elementType="Argument">
                <stringProp name="Argument.name">result_codes</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.ucenter.sinosns.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          </ConfigTestElement>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户中心删除用户" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">delUsers/${user}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="注册-旧" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${user}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="pwd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">111111</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pwd</stringProp>
                </elementProp>
                <elementProp name="proIden" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_MYTV_HMY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">proIden</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="723322540">&quot;code&quot;:&quot;1&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取接口结束时间" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取接口开始时间" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户中心删除用户" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">delUsers/${user}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="注册-新" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">18665708701</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="pwd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">111111</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pwd</stringProp>
                </elementProp>
                <elementProp name="proIden" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_MYTV_HMY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">proIden</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="nickname" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">我好帅</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">nickname</stringProp>
                </elementProp>
                <elementProp name="realName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">我好帅</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">realName</stringProp>
                </elementProp>
                <elementProp name="phone" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">18665708701</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">phone</stringProp>
                </elementProp>
                <elementProp name="sex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sex</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">registeredUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="723322540">&quot;code&quot;:&quot;1&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登陆" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${user}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="pwd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">111111</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pwd</stringProp>
                </elementProp>
                <elementProp name="proIden" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">XN01_MYTV_HMY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">proIden</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="723322540">&quot;code&quot;:&quot;1&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="用户id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据账号查询用户信息" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">oneUserByUserName/${user}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据用户id查询用户信息" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">oneUserById/${userid}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据用户id查询用户信息" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">oneUserById/9266941</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">import java.util.HashMap;
String []use_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);
String []result_codes=&quot;${result_codes}&quot;.split(&quot;,&quot;);
String tag=&quot;0&quot;;

HashMap m=new HashMap();
m.put(&quot;1&quot;,&quot;成功&quot;);

String  errcodestr=&quot;,-999,&quot;;

String []title={&quot;注册-旧&quot;,&quot;注册-新&quot;,&quot;登陆&quot;,&quot;根据账号查询用户信息&quot;,&quot;根据用户id查询用户信息&quot;};

String result=&quot;&quot;;
//result+=&quot;&lt;center&gt;&lt;h3&gt;测试结果&lt;/h3&gt;&lt;/center&gt;&quot;;
result+=&quot;&lt;h5&gt;用户中心接口&lt;/h5&gt;&quot;;
result+=&quot;&lt;center&gt;&lt;body&gt;&quot;;
result+=&quot;&lt;table width=&apos;95%&apos; cellspacing=&apos;2&apos; cellpadding=&apos;5&apos; border=&apos;0&apos; class=&apos;details&apos; align=&apos;center&apos;&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;th&gt;接口名称&lt;/th&gt;&lt;th&gt;状态&lt;/th&gt;&lt;th&gt;响应时间(毫秒)&lt;/th&gt;&lt;/tr&gt;&quot;;
for (int i=0;i&lt;title.length;i++){
	if (errcodestr.indexOf(&quot;,&quot;+result_codes[i+1]+&quot;,&quot;)&gt;=0)
	{
		result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos; &gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
		tag=&quot;1&quot;;
	}
	/*else
	{
		result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
	}*/
}
System.out.println(tag);
result+=&quot;&lt;/table&gt;&quot;;
result+=&quot;&lt;/body&gt;&lt;/center&gt;&quot;;
if (tag==&quot;0&quot;){
	result=&quot; &quot;;
	}
vars.put(&quot;user_result_tag&quot;,tag);
vars.put(&quot;user_result_html&quot;,result);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters">used_date result_codes creat_email_time user_result_tag user_result_html</stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="春晚接口" enabled="true"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值-86" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.10.86</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          </ConfigTestElement>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="dumpid" elementType="Argument">
                <stringProp name="Argument.name">dumpid</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dumpids" elementType="Argument">
                <stringProp name="Argument.name">dumpids</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prizeAmount" elementType="Argument">
                <stringProp name="Argument.name">prizeAmount</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prizeAmounts" elementType="Argument">
                <stringProp name="Argument.name">prizeAmounts</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="used_date" elementType="Argument">
                <stringProp name="Argument.name">used_date</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="result_codes" elementType="Argument">
                <stringProp name="Argument.name">result_codes</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="user" elementType="Argument">
                <stringProp name="Argument.name">user</stringProp>
                <stringProp name="Argument.value">18665708701</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userid" elementType="Argument">
                <stringProp name="Argument.name">userid</stringProp>
                <stringProp name="Argument.value">1111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登陆用户捞饺子" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dumpling/loginUserAcquireDumpling?json=%7b&apos;productCode&apos;:&apos;bd9ee297-69ec-46c8-9a29-1b8782d2dba9&apos;,&apos;sysType&apos;:&apos;1&apos;,&apos;sessionValue&apos;:&apos;12&apos;,&apos;phone&apos;:&apos;${user}&apos;,&apos;userId&apos;:${userid}%7d</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1244739161">&quot;code&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取接口开始时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取接口结束时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="显示当前饺子剩余总数量" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dumpling/nowDumplingNumber?json=%7b&apos;productCode&apos;:&apos;bd9ee297-69ec-46c8-9a29-1b8782d2dba9&apos;,&apos;sysType&apos;:&apos;1&apos;,&apos;sessionValue&apos;:&apos;12&apos;%7d</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-671726036">&quot;code&quot;:&quot;100&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取接口开始时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取接口结束时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="时间列表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dumpling/getTimeAxis?json=%7b&apos;productCode&apos;:&apos;bd9ee297-69ec-46c8-9a29-1b8782d2dba9&apos;,&apos;sysType&apos;:&apos;1&apos;,&apos;sessionValue&apos;:&apos;12&apos;%7d</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-671726036">&quot;code&quot;:&quot;100&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取接口开始时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取接口结束时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="未登录用户捞取三次" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="未登录用户捞饺子" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">dumpling/loggedOutUserAcquireDumpling/?json=%7b&apos;productCode&apos;:&apos;bd9ee297-69ec-46c8-9a29-1b8782d2dba9&apos;,&apos;sysType&apos;:&apos;1&apos;,&apos;sessionValue&apos;: &apos;11111&apos;%7d</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-取饺子ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">dumpid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;prizeId&quot;:&quot;(.*?)&quot;,&quot;prizeInfo&quot;:&quot;&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-取钱" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">prizeAmount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;prizeAmount&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor-算钱和饺子ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">dumpid prizeAmount dumpids prizeAmounts</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">

String dumpid=&quot;${dumpid}&quot;;
String dumpids=&quot;${dumpids}&quot;;
String prizeAmounts=&quot;${prizeAmounts}&quot;;

float prizeAmount=0;

if (!&quot;${prizeAmount}&quot;.equalsIgnoreCase(&quot;&quot;)){
	prizeAmount=Float.parseFloat(&quot;${prizeAmount}&quot;);
}

/*
if (!prizeAmount&lt;0.0000001){
	dumpids=dumpids+&quot;,&quot;+dumpid;	
}
*/


prizeAmounts+=&quot;,&quot;+prizeAmount;
if (!(prizeAmount&lt;0.00000001)){
	dumpids+=&quot;,&quot;+dumpid;
}


vars.put(&quot;dumpids&quot;,dumpids);
vars.put(&quot;prizeAmounts&quot;,prizeAmounts);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-671726036">&quot;code&quot;:&quot;100&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">result_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取接口开始时间" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取接口结束时间" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">used_date result_code</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="未登录用户登陆领取" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">dumpling/loggedOutUserGoAndGet/?json=%7b&apos;productCode&apos;:&apos;bd9ee297-69ec-46c8-9a29-1b8782d2dba9&apos;,&apos;sysType&apos;:&apos;1&apos;,&apos;sessionValue&apos;:&apos;12&apos;,&apos;phone&apos;:&apos;${user}&apos;,&apos;userId&apos;:${userid},&apos;prizeidList&apos;:&apos;${dumpid}&apos;%7d</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters">dumpids</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String dumpids=&quot;${dumpids}&quot;;

dumpids=dumpids.substring(1, dumpids.length());

vars.put(&quot;dumpids&quot;,dumpids);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1244739161">&quot;code&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取接口开始时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取接口结束时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dumpling/getAdvertising?json=%7b&apos;productCode&apos;:&apos;bd9ee297-69ec-46c8-9a29-1b8782d2dba9&apos;,&apos;sysType&apos;:&apos;1&apos;,&apos;sessionValue&apos;:&apos;12&apos;%7d</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-252641078">&quot;message&quot;:&quot;成功&quot;,&quot;code&quot;:&quot;100&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">result_code</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取接口开始时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date mail_page result_code  result_codes</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String []used_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);


long start_date=Long.parseLong(used_dates[used_dates.length-1]);
long end_date=new Date().getTime();

used_dates[used_dates.length-1]=Long.toString(end_date-start_date);

//System.out.println(&quot;start_date=&quot;+start_date);
//System.out.println(&quot;end_date=&quot;+end_date);
//System.out.println(&quot;used_date=&quot;+(end_date-start_date));

String res=&quot;&quot;;
for (int i=1;i&lt;used_dates.length;i++){
	res=res+&quot;,&quot;+used_dates[i];
}

vars.put(&quot;used_date&quot;,res);
vars.put(&quot;result_codes&quot;,&quot;${result_codes}&quot;+&quot;,&quot;+&quot;${result_code}&quot;);


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取接口结束时间" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">used_date result_code</stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;

String start_date=&quot;${used_date}&quot;+&quot;,&quot;+Long.toString(new Date().getTime());


vars.put(&quot;used_date&quot;,start_date);
vars.put(&quot;result_code&quot;,&quot;-999&quot;);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.HashMap;
String []use_dates=&quot;${used_date}&quot;.split(&quot;,&quot;);
String []result_codes=&quot;${result_codes}&quot;.split(&quot;,&quot;);
String tag=&quot;0&quot;;

HashMap m=new HashMap();
m.put(&quot;100&quot;,&quot;成功&quot;);
m.put(&quot;-999&quot;,&quot;接口调用失败&quot;);
m.put(&quot;102&quot;,&quot;您今日捞饺子机会已用完&quot;);

String  errcodestr=&quot;,-999,&quot;;

String []title={&quot;登陆用户捞饺子&quot;,&quot;显示当前饺子剩余总数量&quot;,&quot;时间列表&quot;,&quot;未登录用户捞饺子&quot;,&quot;未登录用户登陆领取&quot;,&quot;获取广告&quot;};

String result=&quot;&quot;;
//result+=&quot;&lt;center&gt;&lt;h3&gt;测试结果&lt;/h3&gt;&lt;/center&gt;&quot;;
result+=&quot;&lt;h5&gt;用户中心接口&lt;/h5&gt;&quot;;
result+=&quot;&lt;center&gt;&lt;body&gt;&quot;;
result+=&quot;&lt;table width=&apos;95%&apos; cellspacing=&apos;2&apos; cellpadding=&apos;5&apos; border=&apos;0&apos; class=&apos;details&apos; align=&apos;center&apos;&gt;&quot;;
result+=&quot;&lt;tr&gt;&lt;th&gt;接口名称&lt;/th&gt;&lt;th&gt;状态&lt;/th&gt;&lt;th&gt;响应时间(毫秒)&lt;/th&gt;&lt;/tr&gt;&quot;;
for (int i=0;i&lt;title.length;i++){
	if (errcodestr.indexOf(&quot;,&quot;+result_codes[i+1]+&quot;,&quot;)&gt;=0)
	{
		result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos; &gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos; style=&apos;background-color:#FF1493&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
		tag=&quot;1&quot;;
	}
	/*else
	{
		result+=&quot;&lt;tr&gt;&lt;td align=&apos;center&apos;&gt;&quot;+title[i]+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+m.get(result_codes[i+1])+&quot;&lt;/td&gt;&lt;td align=&apos;center&apos;&gt;&quot;+use_dates[i+1]+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
	}*/
}
System.out.println(tag);
result+=&quot;&lt;/table&gt;&quot;;
result+=&quot;&lt;/body&gt;&lt;/center&gt;&quot;;
if (tag==&quot;0&quot;){
	result=&quot; &quot;;
	}
vars.put(&quot;dump_result_tag&quot;,tag);
vars.put(&quot;dump_result_html&quot;,result);
vars.put(&quot;result_codes&quot;,&quot;&quot;);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters">used_date result_codes creat_email_time dump_result_tag dump_result_html</stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">${dump_result_tag}==&quot;1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SmtpSampler guiclass="SmtpSamplerGui" testclass="SmtpSampler" testname="SMTP Sampler" enabled="true">
              <stringProp name="SMTPSampler.server">mail.sinoglobal.com.cn</stringProp>
              <stringProp name="SMTPSampler.serverPort">25</stringProp>
              <stringProp name="SMTPSampler.mailFrom">luhao@sinoglobal.com.cn</stringProp>
              <stringProp name="SMTPSampler.replyTo"></stringProp>
              <stringProp name="SMTPSampler.receiverTo">luhao@sinoglobal.com.cn</stringProp>
              <stringProp name="SMTPSampler.receiverCC"></stringProp>
              <stringProp name="SMTPSampler.receiverBCC"></stringProp>
              <stringProp name="SMTPSampler.subject">每日接口自动化测试报告--${creat_email_time}</stringProp>
              <stringProp name="SMTPSampler.suppressSubject">false</stringProp>
              <stringProp name="SMTPSampler.include_timestamp">false</stringProp>
              <stringProp name="SMTPSampler.message">&lt;style type=&quot;text/css&quot;&gt;
				body {
					font:normal 68% verdana,arial,helvetica;
					color:#000000;
				}
				table tr td, table tr th {
					font-size: 100%;
				}
				table.details tr th{
				    color: #ffffff;
					font-weight: bold;
					text-align:center;
					background:#2674a6;
					white-space: nowrap;
				}
				table.details tr td{
					background:#eeeee0;
					white-space: nowrap;
				}
				h1 {
					margin: 0px 0px 5px; font: 165% verdana,arial,helvetica
				}
				h2 {
					margin-top: 1em; margin-bottom: 0.5em; font: bold 125% verdana,arial,helvetica
				}
				h3 {
					margin-bottom: 0.5em; font: bold 115% verdana,arial,helvetica
				}
				.Failure {
					font-weight:bold; color:red;
				}
				
	
				img
				{
				  border-width: 0px;
				}
				
				.expand_link
				{
				   position=absolute;
				   right: 0px;
				   width: 27px;
				   top: 1px;
				   height: 27px;
				}
				
				.page_details
				{
				   display: none;
				}
                                
                                .page_details_expanded
                                {
                                    display: block;
                                    display/* hide this definition from  IE5/6 */: table-row;
                                }


			&lt;/style&gt;
&lt;center&gt;&lt;h3&gt;测试结果&lt;/h3&gt;&lt;/center&gt;
${dump_result_html}
&lt;h5&gt;逯浩&lt;/h5&gt;

&lt;h5&gt;${creat_email_time}&lt;/h5&gt;
&lt;h5&gt;________________________________________&lt;/h5&gt;
&lt;h5&gt;逯浩&lt;/h5&gt;
&lt;h5&gt;信诺技术中心&lt;/h5&gt;
&lt;h5&gt;手机：18665708701&lt;/h5&gt;
&lt;h5&gt;邮箱：luhao@sinoglobal.com.cn&lt;/h5&gt;
&lt;h5&gt;公司地址：北京市丰台区开阳路1号瀚海花园大厦2层&lt;/h5&gt;</stringProp>
              <stringProp name="SMTPSampler.plainBody">true</stringProp>
              <stringProp name="SMTPSampler.attachFile"></stringProp>
              <stringProp name="SMTPSampler.useSSL">false</stringProp>
              <stringProp name="SMTPSampler.useStartTLS">false</stringProp>
              <stringProp name="SMTPSampler.trustAllCerts">false</stringProp>
              <stringProp name="SMTPSampler.enforceStartTLS">false</stringProp>
              <stringProp name="SMTPSampler.useLocalTrustStore">false</stringProp>
              <stringProp name="SMTPSampler.trustStoreToUse"></stringProp>
              <boolProp name="SMTPSampler.use_eml">false</boolProp>
              <stringProp name="SMTPSampler.emlMessageToSend"></stringProp>
              <stringProp name="SMTPSampler.useAuth">true</stringProp>
              <stringProp name="SMTPSampler.password">a888888a</stringProp>
              <stringProp name="SMTPSampler.username">luhao@sinoglobal.com.cn</stringProp>
              <stringProp name="SMTPSampler.messageSizeStatistics">false</stringProp>
              <stringProp name="SMTPSampler.enableDebug">false</stringProp>
              <collectionProp name="SMTPSampler.headerFields">
                <elementProp name="Content-Type" elementType="Argument">
                  <stringProp name="Argument.name">Content-Type</stringProp>
                  <stringProp name="Argument.value">text/html</stringProp>
                </elementProp>
                <elementProp name="charset" elementType="Argument">
                  <stringProp name="Argument.name">charset</stringProp>
                  <stringProp name="Argument.value">utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </SmtpSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.DateFormat;

Date date=new Date();
DateFormat format=new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
String time=format.format(date);

vars.put(&quot;creat_email_time&quot;,time);



</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="false">
          <stringProp name="IfController.condition">${result_tag}==&quot;1&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SmtpSampler guiclass="SmtpSamplerGui" testclass="SmtpSampler" testname="SMTP Sampler" enabled="false">
            <stringProp name="SMTPSampler.server">mail.sinoglobal.com.cn</stringProp>
            <stringProp name="SMTPSampler.serverPort">25</stringProp>
            <stringProp name="SMTPSampler.mailFrom">luhao@sinoglobal.com.cn</stringProp>
            <stringProp name="SMTPSampler.replyTo"></stringProp>
            <stringProp name="SMTPSampler.receiverTo">luhao@sinoglobal.com.cn</stringProp>
            <stringProp name="SMTPSampler.receiverCC"></stringProp>
            <stringProp name="SMTPSampler.receiverBCC"></stringProp>
            <stringProp name="SMTPSampler.subject">每日接口自动化测试报告--${creat_email_time}</stringProp>
            <stringProp name="SMTPSampler.suppressSubject">false</stringProp>
            <stringProp name="SMTPSampler.include_timestamp">false</stringProp>
            <stringProp name="SMTPSampler.message">&lt;style type=&quot;text/css&quot;&gt;
				body {
					font:normal 68% verdana,arial,helvetica;
					color:#000000;
				}
				table tr td, table tr th {
					font-size: 100%;
				}
				table.details tr th{
				    color: #ffffff;
					font-weight: bold;
					text-align:center;
					background:#2674a6;
					white-space: nowrap;
				}
				table.details tr td{
					background:#eeeee0;
					white-space: nowrap;
				}
				h1 {
					margin: 0px 0px 5px; font: 165% verdana,arial,helvetica
				}
				h2 {
					margin-top: 1em; margin-bottom: 0.5em; font: bold 125% verdana,arial,helvetica
				}
				h3 {
					margin-bottom: 0.5em; font: bold 115% verdana,arial,helvetica
				}
				.Failure {
					font-weight:bold; color:red;
				}
				
	
				img
				{
				  border-width: 0px;
				}
				
				.expand_link
				{
				   position=absolute;
				   right: 0px;
				   width: 27px;
				   top: 1px;
				   height: 27px;
				}
				
				.page_details
				{
				   display: none;
				}
                                
                                .page_details_expanded
                                {
                                    display: block;
                                    display/* hide this definition from  IE5/6 */: table-row;
                                }


			&lt;/style&gt;
&lt;center&gt;&lt;h3&gt;测试结果&lt;/h3&gt;&lt;/center&gt;
${result_html}
${activity_result_html}
${user_result_html}
&lt;h5&gt;逯浩&lt;/h5&gt;

&lt;h5&gt;${creat_email_time}&lt;/h5&gt;
&lt;h5&gt;________________________________________&lt;/h5&gt;
&lt;h5&gt;逯浩&lt;/h5&gt;
&lt;h5&gt;信诺技术中心&lt;/h5&gt;
&lt;h5&gt;手机：18665708701&lt;/h5&gt;
&lt;h5&gt;邮箱：luhao@sinoglobal.com.cn&lt;/h5&gt;
&lt;h5&gt;公司地址：北京市丰台区开阳路1号瀚海花园大厦2层&lt;/h5&gt;</stringProp>
            <stringProp name="SMTPSampler.plainBody">true</stringProp>
            <stringProp name="SMTPSampler.attachFile"></stringProp>
            <stringProp name="SMTPSampler.useSSL">false</stringProp>
            <stringProp name="SMTPSampler.useStartTLS">false</stringProp>
            <stringProp name="SMTPSampler.trustAllCerts">false</stringProp>
            <stringProp name="SMTPSampler.enforceStartTLS">false</stringProp>
            <stringProp name="SMTPSampler.useLocalTrustStore">false</stringProp>
            <stringProp name="SMTPSampler.trustStoreToUse"></stringProp>
            <boolProp name="SMTPSampler.use_eml">false</boolProp>
            <stringProp name="SMTPSampler.emlMessageToSend"></stringProp>
            <stringProp name="SMTPSampler.useAuth">true</stringProp>
            <stringProp name="SMTPSampler.password">a888888a</stringProp>
            <stringProp name="SMTPSampler.username">luhao@sinoglobal.com.cn</stringProp>
            <stringProp name="SMTPSampler.messageSizeStatistics">false</stringProp>
            <stringProp name="SMTPSampler.enableDebug">false</stringProp>
            <collectionProp name="SMTPSampler.headerFields">
              <elementProp name="charset" elementType="Argument">
                <stringProp name="Argument.name">charset</stringProp>
                <stringProp name="Argument.value">utf-8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Argument">
                <stringProp name="Argument.name">Content-Type</stringProp>
                <stringProp name="Argument.value">text/html</stringProp>
              </elementProp>
            </collectionProp>
          </SmtpSampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.DateFormat;

Date date=new Date();
DateFormat format=new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
String time=format.format(date);

vars.put(&quot;creat_email_time&quot;,time);



</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
